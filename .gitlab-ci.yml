before_script:
  ##
  ## Install ssh-agent if not already installed, it is required by Docker.
  ## (change apt-get to yum if you use an RPM-based image)
  ##
  - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'

  ##
  ## Run ssh-agent (inside the build environment)
  ##
  - eval $(ssh-agent -s)

  ##
  ## Add the SSH key stored in SSH_PRIVATE_KEY variable to the agent store
  ## We're using tr to fix line endings which makes ed25519 keys work
  ## without extra base64 encoding.
  ## https://gitlab.com/gitlab-examples/ssh-private-key/issues/1#note_48526556
  ##
  - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
  
  ##
  ## Create the SSH directory and give it the right permissions
  ##
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  ## Collect SSH RSA public key from gitlab.com and add them to the known_hosts file
  ## 
  - ssh-keyscan -H gitlab.lrz.de >> ~/.ssh/known_hosts
  - apt-get update && apt-get install -y software-properties-common apt-utils build-essential cmake flex

default:
  tags:
    - kubernetes

stages:
  - build

rust-nightly:
  stage: build
  image: "rust:latest"
  script:
    - echo 'deb http://deb.debian.org/debian testing main' >> /etc/apt/sources.list 
    - apt update -y
    - apt install -y gcc-11 g++-11 libclang-dev libopenblas-dev
    - update-alternatives --install /usr/bin/cc cc /usr/bin/gcc-11 30
    - update-alternatives --install /usr/bin/c++ c++ /usr/bin/g++-11 30
    - update-alternatives --set cc "/usr/bin/gcc-11"
    - update-alternatives --set c++ "/usr/bin/g++-11"
    - cargo build --verbose
    - cargo test --verbose
  allow_failure: true
